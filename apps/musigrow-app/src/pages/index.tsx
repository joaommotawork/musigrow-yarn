import type { NextPage } from 'next';
import Head from 'next/head';
import { Button } from 'musigrow-ui';
import { useAppSelector, useAppDispatch } from '@app/hooks';
import { decrement, increment } from '@features/counter/counterSlice';
import { useGetPokemonByNameQuery } from '@services/pokemon';

const Home: NextPage = () => {
	// The `state` arg is correctly typed as `RootState` already
	const count = useAppSelector((state) => state.counter.value);
	const dispatch = useAppDispatch();
	// Using a query hook automatically fetches data and returns query values
	const { data, error, isLoading } = useGetPokemonByNameQuery('bulbasaur');
	// Individual hooks are also accessible under the generated endpoints:
	// const { data, error, isLoading } = pokemonApi.endpoints.getPokemonByName.useQuery('bulbasaur')

	return (
		<div>
			<Head>
				<title>Create Next App</title>
				<meta name='description' content='Generated by create next app' />
				<link rel='icon' href='/favicon.ico' />
			</Head>

			<main>
				<Button label='OlÃ¡' />
				<h1 className='text-3xl font-bold text-blue-500 underline'>Hello world!</h1>
				<div>
					<div>
						<button aria-label='Increment value' onClick={() => dispatch(increment())}>
							Increment
						</button>
						<span>{count}</span>
						<button aria-label='Decrement value' onClick={() => dispatch(decrement())}>
							Decrement
						</button>
					</div>
				</div>
				<div>
					{error ? (
						<>Oh no, there was an error</>
					) : isLoading ? (
						<>Loading...</>
					) : data ? (
						<>
							<h3>{data.species.name}</h3>
							<img src={data.sprites.front_shiny} alt={data.species.name} />
						</>
					) : null}
				</div>
			</main>

			<footer>Footer</footer>
		</div>
	);
};

export default Home;
